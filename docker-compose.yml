services:
  # --------------------------------------------------
  # DATABASE
  # --------------------------------------------------
  postgres:
    image: postgres:16
    container_name: auth-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: authdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
  # --------------------------------------------------
  # AUTH SERVICE
  # --------------------------------------------------
  auth-service:
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JWT__Key=questa-e-una-chiave-super-segreta-lunga
      - JWT__Issuer=CocktailDebacle
      - JWT__Audience=CocktailDebacleUsers
      - AdminUser__Email=admin@cocktail.local
      - AdminUser__Username=admin
      - AdminUser__Password=SuperSegreta123!
    networks:
      - backend
  # --------------------------------------------------
  # USER PROFILE SERVICE
  # --------------------------------------------------
  user-profile-service:
    build:
      context: ./UserProfileService
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JWT__Key=questa-e-una-chiave-super-segreta-lunga
      - JWT__Issuer=CocktailDebacle
      - JWT__Audience=CocktailDebacleUsers
    #ports:
    #  - "5002:80"
    networks:
      - backend
  # --------------------------------------------------
  # COCKTAIL-IMPORT SERVICE
  # --------------------------------------------------
  cocktail-import-service:
    build:
      context: ./CocktailImportService
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JWT__Key=questa-e-una-chiave-super-segreta-lunga
      - JWT__Issuer=CocktailDebacle
      - JWT__Audience=CocktailDebacleUsers
    #ports:
    #  - "5003:80"
    networks:
      - backend
  # --------------------------------------------------
  # COCKTAIL-SUBMISSION SERVICE
  # --------------------------------------------------
  cocktail-submission-service:
    build:
      context: ./CocktailSubmissionService
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JWT__Key=questa-e-una-chiave-super-segreta-lunga
      - JWT__Issuer=CocktailDebacle
      - JWT__Audience=CocktailDebacleUsers
    #ports:
    #  - "5004:80"
    networks:
      - backend
  # --------------------------------------------------
  # COCKTAIL SERVICE
  # --------------------------------------------------
  cocktail-service:
    build:
      context: ./CocktailService
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JWT__Key=questa-e-una-chiave-super-segreta-lunga
      - JWT__Issuer=CocktailDebacle
      - JWT__Audience=CocktailDebacleUsers
    #ports:
    #  - "5005:80"
    networks:
      - backend
  # --------------------------------------------------
  # SEARCH SERVICE
  # --------------------------------------------------
  search-service:
    build:
      context: ./SearchService
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JWT__Key=questa-e-una-chiave-super-segreta-lunga
      - JWT__Issuer=CocktailDebacle
      - JWT__Audience=CocktailDebacleUsers
      - REFRESH_INTERVAL_MINUTES=1
    #ports:
    #  - "5006:80"
    networks:
      - backend
  # --------------------------------------------------
  # IMAGE FETCHER SERVICE
  # --------------------------------------------------
  image-fetcher-service:
    build:
      context: ./ImageFetcherService
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JWT__Key=questa-e-una-chiave-super-segreta-lunga
      - JWT__Issuer=CocktailDebacle
      - JWT__Audience=CocktailDebacleUsers
      - Pexels__ApiKey=${PEXELS_API_KEY}
      - Pixabay__ApiKey=${PIXABAY_API_KEY}
      - Unsplash__AccessKey=${UNSPLASH_ACCESS_KEY}
    #ports:
    #  - "5007:80"
    networks:
      - backend
  # --------------------------------------------------
  # SEARCH HISTORY SERVICE
  # --------------------------------------------------
  search-history-service:
    build:
      context: ./SearchHistoryService
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JWT__Key=questa-e-una-chiave-super-segreta-lunga
      - JWT__Issuer=CocktailDebacle
      - JWT__Audience=CocktailDebacleUsers
    #ports:
    #  - "5008:80"
    networks:
      - backend
  # --------------------------------------------------
  # FAVORITE COCKTAILS SERVICE
  # --------------------------------------------------
  favorite-cocktails-service:
    build:
      context: ./FavoriteCocktailsService
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JWT__Key=questa-e-una-chiave-super-segreta-lunga
      - JWT__Issuer=CocktailDebacle
      - JWT__Audience=CocktailDebacleUsers
    #ports:
    #  - "5008:80"
    networks:
      - backend
  # # --------------------------------------------------
  # # PROMETHEUS
  # # --------------------------------------------------
  # prometheus:
  #   image: prom/prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - backend

  # # --------------------------------------------------
  # # LOKI
  # # --------------------------------------------------
  # loki:
  #   image: grafana/loki:2.9.0
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml
  #   networks:
  #     - backend

  # # --------------------------------------------------
  # # GRAFANA
  # # --------------------------------------------------
  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - backend
  #   depends_on:
  #     - prometheus
  #     - loki
  # # --------------------------------------------------
  # # CADVISOR
  # # --------------------------------------------------
  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:latest
  #   container_name: cadvisor
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   networks:
  #     - backend
  # --------------------------------------------------
  # API GATEWAY
  # --------------------------------------------------
  gateway:
    build:
      context: ./Gateway
      dockerfile: Dockerfile
    depends_on:
      - auth-service
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - JWT__Key=questa-e-una-chiave-super-segreta-lunga
      - JWT__Issuer=CocktailDebacle
      - JWT__Audience=CocktailDebacleUsers
    ports:
      - "5000:5000"
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge

