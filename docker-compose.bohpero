services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER:      ${POSTGRES_USER}
      POSTGRES_PASSWORD:  ${POSTGRES_PASSWORD}
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [backend]

  auth-service:
    build:
      context:    ./AuthService
      dockerfile: Dockerfile
    depends_on: [postgres]
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS:    http://+:80
      ConnectionStrings__DefaultConnection: >
        Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};
        Database=${AUTH_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    ports: ["5001:80"]
    networks: [backend]

  user-profile-service:
    build:
      context:    ./UserProfileService
      dockerfile: Dockerfile
    depends_on: [postgres]
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS:    http://+:80
      ConnectionStrings__DefaultConnection: >
        Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};
        Database=${USER_PROFILE_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    ports: ["5002:80"]
    networks: [backend]

  cocktail-import-service:
    build:
      context:    ./CocktailImportService
      dockerfile: Dockerfile
    depends_on: [postgres]
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS:    http://+:80
      ConnectionStrings__DefaultConnection: >
        Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};
        Database=${COCKTAIL_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    ports: ["5003:80"]
    networks: [backend]

  gateway:
    build:
      context:    ./Gateway
      dockerfile: Dockerfile
    depends_on:
      - auth-service
      - user-profile-service
      - cocktail-import-service
    environment:
      ASPNETCORE_URLS:    http://+:5000
    ports: ["5000:5000"]
    networks: [backend]

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
